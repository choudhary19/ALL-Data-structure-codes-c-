#include <iostream>

using namespace std;
struct Node {
    int data;
    Node* left;
    Node* right;
    Node(int a) {
        data = a;
        left = NULL;
        right = NULL;

    }
};
 
Node* inorder(struct Node* root) {
    if (root != NULL) {
        inorder(root->left);
        cout << root->data << " ";
        inorder(root->right);
        }
}
Node* deleteINBST(Node* root, int key)
{
    if (key < root->data)
    {
        root->left = deleteINBST(root->left, key);
    }
    else if (key > root->data)
    {
        root->right = deleteINBST(root->right, key);
    }
    else {
        if (root->left == NULL) {
            Node* temp = root->right;
            free(root);
            return temp;
        }
        else if (root->right == NULL) {
            Node* temp = root->left;
            free(root);
            return temp;
        }
        Node* temp = inorder(root->right);
        root->data = temp->data;
        root->right = deleteINBST(root->right, temp->data);
    }
    return root;



}

int main()
{
    Node* root = new Node(8);
    root->left = new Node(5);
    root->right = new Node(10);
    root->left->left = new Node(3);
    root->right->right = new Node(12);
    cout << inorder(root);
    cout<<endl;
   root = deleteINBST(root, 5);
    cout << inorder(root);


}